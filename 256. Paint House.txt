public class Solution {
    public int minCost(int[][] costs) {
        if (costs == null || costs.length == 0) {
            return 0;
        }
        int[][] dpMinCost = new int[costs.length][3];
        for (int j = 0; j < 3; j++) {
            dpMinCost[0][j] = costs[0][j];
        }
        
        for (int i = 1; i < costs.length; i++) {
            dpMinCost[i][0] = Math.min(dpMinCost[i - 1][1], dpMinCost[i - 1][2]) + costs[i][0];
            dpMinCost[i][1] = Math.min(dpMinCost[i - 1][0], dpMinCost[i - 1][2]) + costs[i][1];
            dpMinCost[i][2] = Math.min(dpMinCost[i - 1][0], dpMinCost[i - 1][1]) + costs[i][2];
        }
        
        int min = Integer.MAX_VALUE;
        for (int i = 0; i < 3; i++) {
            min = Math.min(min, dpMinCost[costs.length - 1][i]);
        }
        return min;
    }
}