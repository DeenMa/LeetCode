import java.util.*;
class MyQueue {
    Stack<Integer> input = new Stack<>();
    Stack<Integer> output = new Stack<>();
    
    // Push element x to the back of queue.
    public void push(int x) {
        input.push(x);
    }

    // Removes the element from in front of queue.
    public void pop() {
        if (!output.empty()) {
            output.pop();
        } else if (!input.empty()) {
            while (!input.empty()) {
                output.push(input.pop());
            }
            output.pop();
        } else {
            throw new RuntimeException("queue empty");
        }
    }

    // Get the front element.
    public int peek() {
        if (!output.empty()) {
            return output.peek();
        } else if (!input.empty()) {
            while (!input.empty()) {
                output.push(input.pop());
            }
            return output.peek();
        } else {
            throw new RuntimeException("queue empty");
        }
    }

    // Return whether the queue is empty.
    public boolean empty() {
        return output.empty() && input.empty();
    }
}