public class Solution {
    private void calculateSubsets(List<List<Integer>> results, List<Integer> curResult, int index, int[] nums) {
        if (index == nums.length) {
            results.add(curResult);
            return;
        }
        
        List<Integer> newResultAdd = new ArrayList<>(curResult);
        newResultAdd.add(nums[index]);
        calculateSubsets(results, newResultAdd, index + 1, nums);
        List<Integer> newResultRemain = new ArrayList<>(curResult);
        calculateSubsets(results, newResultRemain, index + 1, nums);
    }
    
    public List<List<Integer>> subsets(int[] nums) {
        List<List<Integer>> results = new ArrayList<>();
        if (nums == null || nums.length == 0) {
            return results;
        }
        List<Integer> curResult = new ArrayList<>();
        int index = 0;
        calculateSubsets(results, curResult, 0, nums);
        return results;
    }
}