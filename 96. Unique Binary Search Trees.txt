/*
if we simply return a data, we can use dp
*/
public class Solution {
    private int[] dp;
    
    public int numTrees(int n) {
        if (n < 2) {
            return 1;
        }
        dp = new int[n + 1]; // from i to n
        dp[0] = 1;
        dp[1] = 1;
        for (int max = 2; max <= n; max++) {
            dp[max] = 0;
            for (int root = 1; root <= max; root++) {
                int left = root - 1;
                int right = max - root;
                dp[max] += dp[left] * dp[right];
            }
        }
        return dp[n];
    }
}