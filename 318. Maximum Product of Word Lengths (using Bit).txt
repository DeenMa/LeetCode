import java.util.*;
public class Solution {
    private int[] covertStringtoBits(String[] words) {
        int[] results = new int[words.length];
        for (int i = 0; i < words.length; i++) {
            int curResult = 0;
            for (int j = 0; j < words[i].length(); j++) {
                int shift = words[i].charAt(j) - 'a';
                curResult = curResult | (1 << shift);
            }
            results[i] = curResult;
        }
        return results;
    }
    
    public int maxProduct(String[] words) {
        if (words == null || words.length < 2) {
            return 0;
        }
        int[] bits = covertStringtoBits(words);
        int result = 0;
        for (int i = 0; i < words.length - 1; i++) {
            for (int j = i + 1; j < words.length; j++) {
                if ((bits[i] & bits[j]) == 0) {
                    result = Math.max(result, words[i].length() * words[j].length());
                }
            }
        }
        return result;
    }
}