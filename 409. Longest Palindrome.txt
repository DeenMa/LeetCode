import java.util.*;
public class Solution {
    public int longestPalindrome(String s) {
        if (s == null || s.length() == 0) {
            return 0;
        }
        HashMap<Character, Integer> map = new HashMap<>();
        for (int i = 0; i < s.length(); i++) {
            if (map.containsKey(s.charAt(i))) {
                map.put(s.charAt(i), map.get(s.charAt(i)) + 1);
            } else {
                map.put(s.charAt(i), 1);
            }
        }
        int result = 0;
        boolean existOdd = false;
        Iterator<Character> i = map.keySet().iterator();
        while (i.hasNext()) {
            Character c = i.next();
            if (map.get(c) % 2 == 0) {
                result += map.get(c);
            } else {
                existOdd = true;
                result += map.get(c) - 1;
            }
        }
        if (existOdd) {
            result++;
        }
        return result;
    }
}