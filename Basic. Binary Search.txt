    private int binarySearchUtil(int[] nums, int start, int end, int target) {
        if (start == end) {
            return nums[start] == target? start : -1;
        }
        if (start == end - 1) {
            if (nums[start] == target) {
                return start;
            }
            if (nums[end] == target) {
                return end;
            }
            return -1;
        }
        int middle = (start + end) / 2;
        if (nums[middle] == target) {
            return middle;
        }
        if (nums[middle] > target) {
            return binarySearchUtil(nums, start, middle - 1, target);
        }
        return binarySearchUtil(nums, middle + 1, end, target);
    }
    
    private int binarySearch(int[] nums, int target) {
        if (nums == null || nums.length == 0) {
            return -1;
        }
        return binarySearchUtil(nums, 0, nums.length - 1, target);
    }